name: Generate monthly changelog

on:
  workflow_dispatch:
    inputs:
      since:
        description: "Data inicial (AAAA-MM-DD)"
        required: true
        type: string
      until:
        description: "Data final (AAAA-MM-DD)"
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Build changelog content (Issues fechadas no período)
        id: build
        uses: actions/github-script@v7
        env:
          SINCE: ${{ inputs.since }}
          UNTIL: ${{ inputs.until }}
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const { owner, repo } = context.repo;

            const since = process.env.SINCE ?? '';
            const until = process.env.UNTIL ?? '';

            // valida AAAA-MM-DD
            const rx = /^\d{4}-\d{2}-\d{2}$/;
            if (!rx.test(since) || !rx.test(until)) {
              core.setFailed(`Datas inválidas: since='${since}', until='${until}'. Use AAAA-MM-DD.`);
              return;
            }

            const month = since.slice(0, 7); // AAAA-MM

            async function search(q) {
              const res = await github.paginate(
                github.rest.search.issuesAndPullRequests,
                { q, per_page: 100 }
              );
              // manter só issues (descarta PRs)
              return res.filter(i => !i.pull_request);
            }

            const base = `repo:${owner}/${repo} is:issue is:closed label:"status:done" closed:${since}..${until}`;
            const enhancements = await search(`${base} label:"type:enhancement"`);
            const bugs = await search(`${base} label:"type:bug"`);

            const toLines = list =>
              list.length ? list.map(i => `- ${i.title} (#${i.number})`) : ['- _sem itens_'];

            const content = [
              `# Changelog — ${month}`,
              '',
              '## ✨ Melhorias',
              ...toLines(enhancements),
              '',
              '## 🐞 Correções',
              ...toLines(bugs),
              '',
              '## 📌 Observações',
              '- (adicione notas, migrações, etc. se necessário)',
              ''
            ].join('\n');

            const outDir = path.join(process.cwd(), 'changelogs');
            const outFile = path.join(outDir, `${month}.md`);
            fs.mkdirSync(outDir, { recursive: true });
            fs.writeFileSync(outFile, content, 'utf8');

            core.setOutput('file', `changelogs/${month}.md`);

      - name: Update root CHANGELOG.md index
        uses: actions/github-script@v7
        env:
          SINCE: ${{ inputs.since }}
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            const monthFromInput = (process.env.SINCE || '').slice(0,7); // AAAA-MM
            const root = path.join(process.cwd(), 'CHANGELOG.md');
            const dir  = path.join(process.cwd(), 'changelogs');

            // lista todos os meses existentes na pasta changelogs
            let months = [];
            if (fs.existsSync(dir)) {
              months = fs.readdirSync(dir)
                .filter(f => /^\d{4}-\d{2}\.md$/.test(f))
                .map(f => f.replace(/\.md$/, ''));
            }
            if (monthFromInput && !months.includes(monthFromInput)) {
              months.push(monthFromInput);
            }
            // ordena desc (mais recente primeiro)
            months.sort().reverse();

            if (months.length === 0) {
              return; // nada para indexar
            }

            const latest = months[0];
            const lines = [
              '# CHANGELOG',
              '',
              `**Último:** [${latest}](changelogs/${latest}.md)`,
              '',
              '## Histórico',
              ...months.map(m => `- [${m}](changelogs/${m}.md)`),
              ''
            ].join('\n');

            fs.writeFileSync(root, lines, 'utf8');

      - name: Commit changelog file
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(changelog): add ${{ inputs.since }}..${{ inputs.until }}"
          file_pattern: |
            changelogs/*.md
            CHANGELOG.md
